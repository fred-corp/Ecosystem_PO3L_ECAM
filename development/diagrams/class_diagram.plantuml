@startuml classes_classes
set namespaceSeparator none
skinparam backgroundcolor transparent

class "Ecosystem" as classes.ecosystem.Ecosystem {
  objects : list
  size_x: int
  size_y: int
  add_object(object)
  get_index(object)
  get_object_by_coord(x, y)
  remove_object(object)
}

class "Life" as classes.life.Life {
  UUID : string
  lifeform : string
  age : int
  max_age : int
  energy : int
  max_energy : int
  health_points : int
  max_health_points : int
  x : int
  y : int
  lifespan : int
  increase_age()
  make_move(coord)
  modify_energy(amount)
  modify_health_points(amount)
}

class "Food" as classes.food.Food {
  UUID : string
  lifeform : string
  energy: int
  x: int
  y: int
  modify_energy(amount)
}

abstract class "Animal" as classes.animal.Animal {
  gender : int
  isPregnant : int
  vision_radius : int
  gestationCooldown : int
  adultAt : int
  contact_radius : int
  max_move : int
  {abstract} eat_meat()
  gestated(min_age)
  get_contact_zone(size)
  get_vision_zone(size)
}

class "Carnivore" as classes.carnivore.Carnivore {
  eat_meat() {return True}
}

class "Herbivore" as classes.herbivore.Herbivore {
  eat_meat() {return False}
}

class "Meat" as classes.meat.Meat {
  age: int
  rotsAt : int
  increase_age()
}
class "OrganicWaste" as classes.organic_waste.OrganicWaste {
}
class "Plant" as classes.plant.Plant {
  adultAt : int
  root_radius : int
  seed_radius : int
  seed_cooldown : int
  get_root_zone(size)
  get_seed_zone(size)
}

classes.ecosystem.Ecosystem *-- classes.life.Life
classes.ecosystem.Ecosystem *-- classes.food.Food
classes.life.Life <|-- classes.animal.Animal
classes.life.Life <|-- classes.plant.Plant
classes.food.Food <|-- classes.meat.Meat
classes.food.Food <|-- classes.organic_waste.OrganicWaste
classes.animal.Animal <|-- classes.carnivore.Carnivore
classes.animal.Animal <|-- classes.herbivore.Herbivore
@enduml